{
9. Implemente un programa que invoque a un módulo que genere un árbol binario de
búsqueda con nombres de personas que se leen desde teclado. La lectura finaliza con el 
nombre ‘ZZZ’. También debe invocar a otro módulo que reciba el árbol generado y un
nombre, y retorne verdadero si existe dicho nombre en el árbol o falso en caso contrario. 
}


program Recursion8;
type

arbol=^nodo;
nodo=record
    dato:string;
    hd:arbol;
    hi:arbol;
end;

Procedure Insertar(var a:arbol; nom:string);
begin
  if(a=nil) then begin
     new(a);
     a^.dato:=nom;
     a^.hd:=nil;
     a^.hi:=nil;
  end
  else begin
     if(a^.dato>=nom) then
        insertar(a^.hi,nom)
     else
        insertar(a^.hd,nom);
  end;
end;


procedure cargarABB ( var a:arbol);
var
nombre:string;
begin
write('Ingrese un nombre');
readln(nombre);
while ( nombre <'zzz') do begin
    Insertar(a, nombre);
    write('Ingrese un nombre');
    readln(nombre);
    end;
end;

function buscar (a: arbol; nom:string): boolean; 
begin 
    if (a=nil) then  
        buscar:=false        // primer caso base        

    else 
    if (a^.dato = nom) then           // segundo caso base 
        buscar:=true 
    else 
    if (nom>a^.dato) then 
        buscar:=buscar(a^.hd, nom) 
    else 
        buscar:=buscar(a^.hi, nom);  
end; 


var
a:arbol;
nom:string;
begin
cargarABB(a);
write('ingrese el nombre que desea buscar');
readln(nom);
write('el estado logico de la busqueda es, ', buscar(a,nom));
end.






















